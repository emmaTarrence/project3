#include <iostream> 
#include <vector>
#include <string> 

class ZooAnimal { 
    public: 
    std::string name;
    int number; 
    ZooAnimal(const std:: string& name, int number): name(name), number(number){}
};

void addsAnimal(std::vector<ZooAnimal> zooAnimals){
    for(auto& animal: zooAnimals){
        animal.number++;
    }
}
void addsAnimal(std::vector<ZooAnimal>* zooAnimals){
    for(auto& animal: *zooAnimals){
        animal.number++;
    }
}
int main(void) { 
    std::vector<std::string> animals = {"dogs", "cats", "horses"};
    for(std::string animal: animals) { 
        std::cout<< animal << std::endl;
    }
    std::string invalid = animals[4];

    std::vector<ZooAnimal> zooAnimals = {{"lions", 5}, {"bears", 3}, {"Tigers", 2}};
    for(auto& animal: zooAnimals) { 
        std::cout<< animal.name << ": "<< animal.number << std::endl;
    }
    addsAnimal(zooAnimals);
        for(auto& animal: zooAnimals) { 
        std::cout<< animal.name << ": "<< animal.number << std::endl;
    }
    addsAnimal(&zooAnimals);
            for(auto& animal: zooAnimals) { 
        std::cout<< animal.name << ": "<< animal.number << std::endl;
    }
    ZooAnimal zooAnimalArray[] = {{"lions", 5}, {"tigers", 3}, {"bears", 2}};
  /*
  doesnt work for an array 

  addsAnimal(zooAnimalArray);
            for(auto& animal: zooAnimals) { 
        std::cout<< animal.name << ": "<< animal.number << std::endl;
    }*/

}

/*
 Valgrind output: 
 
==1609420== Memcheck, a memory error detector
==1609420== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1609420== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1609420== Command: ./assignment
==1609420== 
dogs
cats
horses
==1609420== Invalid read of size 8
==1609420==    at 0x49E5148: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==1609420==    by 0x10A764: main (in /home/shay/a/etarrenc/39595/s9/assignment)
==1609420==  Address 0x4e08d08 is 24 bytes before a block of size 1,024 alloc'd
==1609420==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==1609420==    by 0x4B60BA3: _IO_file_doallocate (filedoalloc.c:101)
==1609420==    by 0x4B6FCDF: _IO_doallocbuf (genops.c:347)
==1609420==    by 0x4B6EF5F: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:744)
==1609420==    by 0x4B6D6D4: _IO_new_file_xsputn (fileops.c:1243)
==1609420==    by 0x4B6D6D4: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==1609420==    by 0x4B61FD6: fwrite (iofwrite.c:39)
==1609420==    by 0x49D2B64: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==1609420==    by 0x10A6EA: main (in /home/shay/a/etarrenc/39595/s9/assignment)
==1609420== 
==1609420== Invalid read of size 8
==1609420==    at 0x49E514F: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==1609420==    by 0x10A764: main (in /home/shay/a/etarrenc/39595/s9/assignment)
==1609420==  Address 0x4e08d00 is 32 bytes before a block of size 1,024 in arena "client"
==1609420== 
terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check: __n (which is 5) >= this->size() (which is 3)
==1609420== 
==1609420== Process terminating with default action of signal 6 (SIGABRT)
==1609420==    at 0x4B789FC: __pthread_kill_implementation (pthread_kill.c:44)
==1609420==    by 0x4B789FC: __pthread_kill_internal (pthread_kill.c:78)
==1609420==    by 0x4B789FC: pthread_kill@@GLIBC_2.34 (pthread_kill.c:89)
==1609420==    by 0x4B24475: raise (raise.c:26)
==1609420==    by 0x4B0A7F2: abort (abort.c:79)
==1609420==    by 0x4938B9D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==1609420==    by 0x494420B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==1609420==    by 0x4944276: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==1609420==    by 0x49444D7: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==1609420==    by 0x493B4CC: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==1609420==    by 0x10B206: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_check(unsigned long) const (in /home/shay/a/etarrenc/39595/s9/assignment)
==1609420==    by 0x10ADB8: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::at(unsigned long) (in /home/shay/a/etarrenc/39595/s9/assignment)
==1609420==    by 0x10A778: main (in /home/shay/a/etarrenc/39595/s9/assignment)
==1609420== 
==1609420== HEAP SUMMARY:
==1609420==     in use at exit: 74,062 bytes in 5 blocks
==1609420==   total heap usage: 6 allocs, 1 frees, 74,094 bytes allocated
==1609420== 
==1609420== LEAK SUMMARY:
==1609420==    definitely lost: 0 bytes in 0 blocks
==1609420==    indirectly lost: 0 bytes in 0 blocks
==1609420==      possibly lost: 144 bytes in 1 blocks
==1609420==    still reachable: 73,918 bytes in 4 blocks
==1609420==                       of which reachable via heuristic:
==1609420==                         stdstring          : 94 bytes in 1 blocks
==1609420==         suppressed: 0 bytes in 0 blocks
==1609420== Rerun with --leak-check=full to see details of leaked memory
==1609420== 
==1609420== For lists of detected and suppressed errors, rerun with: -s
==1609420== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Aborted (core dumped)
*/